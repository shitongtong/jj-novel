<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jj.rest.dao.NovelMapper">
    <resultMap id="NovelResultMap" type="com.jj.rest.po.Novel">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="novel_uuid" jdbcType="VARCHAR" property="novelUuid" />
        <result column="novel_name" jdbcType="VARCHAR" property="novelName" />
        <result column="autor" jdbcType="VARCHAR" property="autor" />
        <result column="category" jdbcType="VARCHAR" property="category" />
        <result column="img_url" jdbcType="VARCHAR" property="imgUrl" />
        <result column="lastchapter" jdbcType="VARCHAR" property="lastchapter" />
        <result column="chapters" jdbcType="INTEGER" property="chapters" />
        <result column="size" jdbcType="INTEGER" property="size" />
        <result column="lastupdate" jdbcType="TIMESTAMP" property="lastupdate" />
        <result column="status" jdbcType="INTEGER" property="status" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="create_uid" jdbcType="VARCHAR" property="createUid" />
        <result column="update_uid" jdbcType="VARCHAR" property="updateUid" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="sort" jdbcType="INTEGER" property="sort" />
    </resultMap>
    <resultMap extends="NovelResultMap" id="NovelMapWithBLOBs" type="com.jj.rest.po.Novel">
        <result column="intro" jdbcType="LONGVARCHAR" property="intro" />
    </resultMap>
    <sql id="Novel_Column_List">
        id, novel_uuid, novel_name, autor, category, img_url, lastchapter, chapters, size, 
        lastupdate, status, create_time, update_time, create_uid, update_uid, remark, sort
    </sql>
    <sql id="Novel_Blob_Column_List">
        intro
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="NovelMapWithBLOBs">
        select 
        <include refid="Novel_Column_List" />
        ,
        <include refid="Novel_Blob_Column_List" />
        from novel
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from novel
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insertSelective" parameterType="com.jj.rest.po.Novel">
        insert into novel
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="novelUuid != null">
                novel_uuid,
            </if>
            <if test="novelName != null">
                novel_name,
            </if>
            <if test="autor != null">
                autor,
            </if>
            <if test="category != null">
                category,
            </if>
            <if test="imgUrl != null">
                img_url,
            </if>
            <if test="lastchapter != null">
                lastchapter,
            </if>
            <if test="chapters != null">
                chapters,
            </if>
            <if test="size != null">
                size,
            </if>
            <if test="lastupdate != null">
                lastupdate,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createUid != null">
                create_uid,
            </if>
            <if test="updateUid != null">
                update_uid,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="intro != null">
                intro,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="novelUuid != null">
                #{novelUuid,jdbcType=VARCHAR},
            </if>
            <if test="novelName != null">
                #{novelName,jdbcType=VARCHAR},
            </if>
            <if test="autor != null">
                #{autor,jdbcType=VARCHAR},
            </if>
            <if test="category != null">
                #{category,jdbcType=VARCHAR},
            </if>
            <if test="imgUrl != null">
                #{imgUrl,jdbcType=VARCHAR},
            </if>
            <if test="lastchapter != null">
                #{lastchapter,jdbcType=VARCHAR},
            </if>
            <if test="chapters != null">
                #{chapters,jdbcType=INTEGER},
            </if>
            <if test="size != null">
                #{size,jdbcType=INTEGER},
            </if>
            <if test="lastupdate != null">
                #{lastupdate,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUid != null">
                #{createUid,jdbcType=VARCHAR},
            </if>
            <if test="updateUid != null">
                #{updateUid,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="intro != null">
                #{intro,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.jj.rest.po.Novel">
        update novel
        <set>
            <if test="novelUuid != null">
                novel_uuid = #{novelUuid,jdbcType=VARCHAR},
            </if>
            <if test="novelName != null">
                novel_name = #{novelName,jdbcType=VARCHAR},
            </if>
            <if test="autor != null">
                autor = #{autor,jdbcType=VARCHAR},
            </if>
            <if test="category != null">
                category = #{category,jdbcType=VARCHAR},
            </if>
            <if test="imgUrl != null">
                img_url = #{imgUrl,jdbcType=VARCHAR},
            </if>
            <if test="lastchapter != null">
                lastchapter = #{lastchapter,jdbcType=VARCHAR},
            </if>
            <if test="chapters != null">
                chapters = #{chapters,jdbcType=INTEGER},
            </if>
            <if test="size != null">
                size = #{size,jdbcType=INTEGER},
            </if>
            <if test="lastupdate != null">
                lastupdate = #{lastupdate,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUid != null">
                create_uid = #{createUid,jdbcType=VARCHAR},
            </if>
            <if test="updateUid != null">
                update_uid = #{updateUid,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="intro != null">
                intro = #{intro,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jj.rest.po.Novel">
        update novel
        set novel_uuid = #{novelUuid,jdbcType=VARCHAR},
            novel_name = #{novelName,jdbcType=VARCHAR},
            autor = #{autor,jdbcType=VARCHAR},
            category = #{category,jdbcType=VARCHAR},
            img_url = #{imgUrl,jdbcType=VARCHAR},
            lastchapter = #{lastchapter,jdbcType=VARCHAR},
            chapters = #{chapters,jdbcType=INTEGER},
            size = #{size,jdbcType=INTEGER},
            lastupdate = #{lastupdate,jdbcType=TIMESTAMP},
            status = #{status,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            create_uid = #{createUid,jdbcType=VARCHAR},
            update_uid = #{updateUid,jdbcType=VARCHAR},
            remark = #{remark,jdbcType=VARCHAR},
            sort = #{sort,jdbcType=INTEGER},
            intro = #{intro,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByUuid" parameterType="java.lang.String" resultMap="NovelMapWithBLOBs">
        select 
        <include refid="Novel_Column_List" />
        from novel
        where novel_uuid = #{uuid,jdbcType=VARCHAR}
    </select>
    <update id="updateByUuidSelective" parameterType="com.jj.rest.po.Novel">
        update novel
        <set>
            <if test="novelUuid != null">
                novel_uuid = #{novelUuid,jdbcType=VARCHAR},
            </if>
            <if test="novelName != null">
                novel_name = #{novelName,jdbcType=VARCHAR},
            </if>
            <if test="autor != null">
                autor = #{autor,jdbcType=VARCHAR},
            </if>
            <if test="category != null">
                category = #{category,jdbcType=VARCHAR},
            </if>
            <if test="imgUrl != null">
                img_url = #{imgUrl,jdbcType=VARCHAR},
            </if>
            <if test="lastchapter != null">
                lastchapter = #{lastchapter,jdbcType=VARCHAR},
            </if>
            <if test="chapters != null">
                chapters = #{chapters,jdbcType=INTEGER},
            </if>
            <if test="size != null">
                size = #{size,jdbcType=INTEGER},
            </if>
            <if test="lastupdate != null">
                lastupdate = #{lastupdate,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUid != null">
                create_uid = #{createUid,jdbcType=VARCHAR},
            </if>
            <if test="updateUid != null">
                update_uid = #{updateUid,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="intro != null">
                intro = #{intro,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where novel_uuid = #{novelUuid,jdbcType=VARCHAR}
    </update>
</mapper>